// dart format width=80
import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'package:drift/drift.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class Schema2 extends i0.VersionedSchema {
  Schema2({required super.database}) : super(version: 2);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
  ];
  late final Shape0 companyTable = Shape0(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 employeeTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 configurationTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get identifier =>
      columnsByName['identifier']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_0(String aliasedName) =>
    i1.GeneratedColumn<String>('id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_1(String aliasedName) =>
    i1.GeneratedColumn<String>('identifier', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_2(String aliasedName) =>
    i1.GeneratedColumn<String>('name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_3(String aliasedName) =>
    i1.GeneratedColumn<String>('time_zone', aliasedName, false,
        type: i1.DriftSqlType.string);

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pis =>
      columnsByName['pis']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cpfNumber =>
      columnsByName['cpf_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get mail =>
      columnsByName['mail']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyId =>
      columnsByName['company_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nfcCode =>
      columnsByName['nfc_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeType =>
      columnsByName['employee_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get registrationNumber =>
      columnsByName['registration_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get arpId =>
      columnsByName['arp_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_4(String aliasedName) =>
    i1.GeneratedColumn<String>('pis', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_5(String aliasedName) =>
    i1.GeneratedColumn<String>('cpf_number', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_6(String aliasedName) =>
    i1.GeneratedColumn<String>('mail', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_7(String aliasedName) =>
    i1.GeneratedColumn<String>('company_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES company_table (id)'));
i1.GeneratedColumn<String> _column_8(String aliasedName) =>
    i1.GeneratedColumn<String>('nfc_code', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_9(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_type', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_10(String aliasedName) =>
    i1.GeneratedColumn<String>('registration_number', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_11(String aliasedName) =>
    i1.GeneratedColumn<String>('arp_id', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get onlyOnline =>
      columnsByName['only_online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get operationMode =>
      columnsByName['operation_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timezone =>
      columnsByName['timezone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get takePhoto =>
      columnsByName['take_photo']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<bool> _column_12(String aliasedName) =>
    i1.GeneratedColumn<bool>('only_online', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("only_online" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_13(String aliasedName) =>
    i1.GeneratedColumn<String>('operation_mode', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_14(String aliasedName) =>
    i1.GeneratedColumn<String>('timezone', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_15(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_16(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES employee_table (id)'));

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get clockingEventId =>
      columnsByName['clocking_event_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get dateTimeEvent =>
      columnsByName['date_time_event']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get dateEvent =>
      columnsByName['date_event']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeEvent =>
      columnsByName['time_event']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyIdentifier =>
      columnsByName['company_identifier']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pis =>
      columnsByName['pis']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cpf =>
      columnsByName['cpf']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get platform =>
      columnsByName['platform']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get identifierDevice =>
      columnsByName['identifier_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nameDevice =>
      columnsByName['name_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get developerModeDevice =>
      columnsByName['developer_mode_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get gpsOperationModeDevice =>
      columnsByName['gps_operation_mode_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get dateTimeAutomaticDevice =>
      columnsByName['date_time_automatic_device']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get timeZoneAutomaticDevice =>
      columnsByName['time_zone_automatic_device']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<double> get latitudeLocation =>
      columnsByName['latitude_location']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get longitudeLocation =>
      columnsByName['longitude_location']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<bool> get geolocationIsMock =>
      columnsByName['geolocation_is_mock']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get dateAndTimeLocation =>
      columnsByName['date_and_time_location']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fenceState =>
      columnsByName['fence_state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get use =>
      columnsByName['use']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get mode =>
      columnsByName['mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get online =>
      columnsByName['online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get origin =>
      columnsByName['origin']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get signature =>
      columnsByName['signature']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get signatureVersion =>
      columnsByName['signature_version']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get clientOriginInfo =>
      columnsByName['client_origin_info']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appointmentImage =>
      columnsByName['appointment_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get photoNotCaptured =>
      columnsByName['photo_not_captured']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get locationStatus =>
      columnsByName['location_status']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isSynchronized =>
      columnsByName['is_synchronized']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_17(String aliasedName) =>
    i1.GeneratedColumn<String>('clocking_event_id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_18(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date_time_event', aliasedName, false,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<String> _column_19(String aliasedName) =>
    i1.GeneratedColumn<String>('date_event', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_20(String aliasedName) =>
    i1.GeneratedColumn<String>('time_event', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_21(String aliasedName) =>
    i1.GeneratedColumn<String>('company_identifier', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_22(String aliasedName) =>
    i1.GeneratedColumn<String>('cpf', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_23(String aliasedName) =>
    i1.GeneratedColumn<String>('app_version', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_24(String aliasedName) =>
    i1.GeneratedColumn<String>('platform', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_25(String aliasedName) =>
    i1.GeneratedColumn<String>('identifier_device', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_26(String aliasedName) =>
    i1.GeneratedColumn<String>('name_device', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_27(String aliasedName) =>
    i1.GeneratedColumn<String>('developer_mode_device', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_28(String aliasedName) =>
    i1.GeneratedColumn<String>('gps_operation_mode_device', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_29(String aliasedName) =>
    i1.GeneratedColumn<bool>('date_time_automatic_device', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("date_time_automatic_device" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_30(String aliasedName) =>
    i1.GeneratedColumn<bool>('time_zone_automatic_device', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("time_zone_automatic_device" IN (0, 1))'));
i1.GeneratedColumn<double> _column_31(String aliasedName) =>
    i1.GeneratedColumn<double>('latitude_location', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_32(String aliasedName) =>
    i1.GeneratedColumn<double>('longitude_location', aliasedName, true,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<bool> _column_33(String aliasedName) =>
    i1.GeneratedColumn<bool>('geolocation_is_mock', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("geolocation_is_mock" IN (0, 1))'));
i1.GeneratedColumn<DateTime> _column_34(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date_and_time_location', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<String> _column_35(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_36(String aliasedName) =>
    i1.GeneratedColumn<String>('fence_state', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_37(String aliasedName) =>
    i1.GeneratedColumn<int>('use', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_38(String aliasedName) =>
    i1.GeneratedColumn<String>('mode', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_39(String aliasedName) =>
    i1.GeneratedColumn<bool>('online', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints:
            i1.GeneratedColumn.constraintIsAlways('CHECK ("online" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_40(String aliasedName) =>
    i1.GeneratedColumn<String>('origin', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_41(String aliasedName) =>
    i1.GeneratedColumn<String>('signature', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_42(String aliasedName) =>
    i1.GeneratedColumn<int>('signature_version', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_43(String aliasedName) =>
    i1.GeneratedColumn<String>('client_origin_info', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_44(String aliasedName) =>
    i1.GeneratedColumn<String>('appointment_image', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_45(String aliasedName) =>
    i1.GeneratedColumn<String>('photo_not_captured', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_46(String aliasedName) =>
    i1.GeneratedColumn<String>('location_status', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_47(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_synchronized', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_synchronized" IN (0, 1))'));

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
}

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get type =>
      columnsByName['type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<double> get latitude =>
      columnsByName['latitude']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get longitude =>
      columnsByName['longitude']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get radius =>
      columnsByName['radius']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<DateTime> get dateAndTime =>
      columnsByName['date_and_time']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_48(String aliasedName) =>
    i1.GeneratedColumn<String>('type', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<double> _column_49(String aliasedName) =>
    i1.GeneratedColumn<double>('latitude', aliasedName, false,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_50(String aliasedName) =>
    i1.GeneratedColumn<double>('longitude', aliasedName, false,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<double> _column_51(String aliasedName) =>
    i1.GeneratedColumn<double>('radius', aliasedName, false,
        type: i1.DriftSqlType.double);
i1.GeneratedColumn<DateTime> _column_52(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date_and_time', aliasedName, false,
        type: i1.DriftSqlType.dateTime);

class Shape6 extends i0.VersionedTable {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fenceId =>
      columnsByName['fence_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_53(String aliasedName) =>
    i1.GeneratedColumn<String>('fence_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES fence_table (id)'));

class Shape7 extends i0.VersionedTable {
  Shape7({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get perimeterId =>
      columnsByName['perimeter_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fenceId =>
      columnsByName['fence_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_54(String aliasedName) =>
    i1.GeneratedColumn<String>('perimeter_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES perimeter_table (id)'));

class Shape8 extends i0.VersionedTable {
  Shape8({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get imei =>
      columnsByName['imei']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get model =>
      columnsByName['model']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get status =>
      columnsByName['status']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_55(String aliasedName) =>
    i1.GeneratedColumn<String>('imei', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_56(String aliasedName) =>
    i1.GeneratedColumn<String>('name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_57(String aliasedName) =>
    i1.GeneratedColumn<String>('model', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_58(String aliasedName) =>
    i1.GeneratedColumn<String>('status', aliasedName, false,
        type: i1.DriftSqlType.string);

class Shape9 extends i0.VersionedTable {
  Shape9({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get deviceSituation =>
      columnsByName['device_situation']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeSituation =>
      columnsByName['employee_situation']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get requestDateTime =>
      columnsByName['request_date_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_59(String aliasedName) =>
    i1.GeneratedColumn<String>('device_situation', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_60(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_situation', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_61(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('request_date_time', aliasedName, false,
        type: i1.DriftSqlType.dateTime);

final class Schema3 extends i0.VersionedSchema {
  Schema3({required super.database}) : super(version: 3);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 employeeTable = Shape1(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 configurationTable = Shape2(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape10 extends i0.VersionedTable {
  Shape10({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get identifier =>
      columnsByName['identifier']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get arpId =>
      columnsByName['arp_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get caepf =>
      columnsByName['caepf']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cnoNumber =>
      columnsByName['cno_number']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_62(String aliasedName) =>
    i1.GeneratedColumn<String>('caepf', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_63(String aliasedName) =>
    i1.GeneratedColumn<String>('cno_number', aliasedName, true,
        type: i1.DriftSqlType.string);

final class Schema4 extends i0.VersionedSchema {
  Schema4({required super.database}) : super(version: 4);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 employeeTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 configurationTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape11 extends i0.VersionedTable {
  Shape11({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pis =>
      columnsByName['pis']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cpfNumber =>
      columnsByName['cpf_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get mail =>
      columnsByName['mail']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyId =>
      columnsByName['company_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nfcCode =>
      columnsByName['nfc_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeType =>
      columnsByName['employee_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get registrationNumber =>
      columnsByName['registration_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get arpId =>
      columnsByName['arp_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get enable =>
      columnsByName['enable']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_64(String aliasedName) =>
    i1.GeneratedColumn<bool>('enable', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enable" IN (0, 1))'));

class Shape12 extends i0.VersionedTable {
  Shape12({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get onlyOnline =>
      columnsByName['only_online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get operationMode =>
      columnsByName['operation_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timezone =>
      columnsByName['timezone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get takePhoto =>
      columnsByName['take_photo']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowChangeTime =>
      columnsByName['allow_change_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<bool> _column_65(String aliasedName) =>
    i1.GeneratedColumn<bool>('allow_change_time', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("allow_change_time" IN (0, 1))'));
i1.GeneratedColumn<String> _column_66(String aliasedName) =>
    i1.GeneratedColumn<String>('username', aliasedName, true,
        type: i1.DriftSqlType.string);

final class Schema5 extends i0.VersionedSchema {
  Schema5({required super.database}) : super(version: 5);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 employeeTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape12 configurationTable = Shape12(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape13 extends i0.VersionedTable {
  Shape13({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get tenantName =>
      columnsByName['tenant_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get accessKey =>
      columnsByName['access_key']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get secret =>
      columnsByName['secret']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastUpdate =>
      columnsByName['last_update']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_67(String aliasedName) =>
    i1.GeneratedColumn<String>('tenant_name', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_68(String aliasedName) =>
    i1.GeneratedColumn<String>('access_key', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_69(String aliasedName) =>
    i1.GeneratedColumn<String>('secret', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_70(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_update', aliasedName, true,
        type: i1.DriftSqlType.dateTime);

final class Schema6 extends i0.VersionedSchema {
  Schema6({required super.database}) : super(version: 6);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 employeeTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape14 extends i0.VersionedTable {
  Shape14({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get onlyOnline =>
      columnsByName['only_online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get operationMode =>
      columnsByName['operation_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timezone =>
      columnsByName['timezone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get takePhoto =>
      columnsByName['take_photo']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowChangeTime =>
      columnsByName['allow_change_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get faceRecognition =>
      columnsByName['face_recognition']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_71(String aliasedName) =>
    i1.GeneratedColumn<bool>('face_recognition', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("face_recognition" IN (0, 1))'));

final class Schema7 extends i0.VersionedSchema {
  Schema7({required super.database}) : super(version: 7);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape11 employeeTable = Shape11(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 deviceConfigurationTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape15 extends i0.VersionedTable {
  Shape15({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get enableNfc =>
      columnsByName['enable_nfc']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get enableQrCode =>
      columnsByName['enable_qr_code']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get enableFacial =>
      columnsByName['enable_facial']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastUpdate =>
      columnsByName['last_update']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get takePhotoMulti =>
      columnsByName['take_photo_multi']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get lastSync =>
      columnsByName['last_sync']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<bool> _column_72(String aliasedName) =>
    i1.GeneratedColumn<bool>('enable_nfc', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enable_nfc" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_73(String aliasedName) =>
    i1.GeneratedColumn<bool>('enable_qr_code', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enable_qr_code" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_74(String aliasedName) =>
    i1.GeneratedColumn<bool>('enable_facial', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enable_facial" IN (0, 1))'));
i1.GeneratedColumn<DateTime> _column_75(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_update', aliasedName, false,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<bool> _column_76(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo_multi', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo_multi" IN (0, 1))'));
i1.GeneratedColumn<DateTime> _column_77(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_sync', aliasedName, false,
        type: i1.DriftSqlType.dateTime);

final class Schema8 extends i0.VersionedSchema {
  Schema8({required super.database}) : super(version: 8);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape16 employeeTable = Shape16(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 deviceConfigurationTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape16 extends i0.VersionedTable {
  Shape16({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pis =>
      columnsByName['pis']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cpfNumber =>
      columnsByName['cpf_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get mail =>
      columnsByName['mail']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyId =>
      columnsByName['company_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nfcCode =>
      columnsByName['nfc_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeType =>
      columnsByName['employee_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get registrationNumber =>
      columnsByName['registration_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get arpId =>
      columnsByName['arp_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get enable =>
      columnsByName['enable']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get faceRegistered =>
      columnsByName['face_registered']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_78(String aliasedName) =>
    i1.GeneratedColumn<String>('face_registered', aliasedName, true,
        type: i1.DriftSqlType.string);

final class Schema9 extends i0.VersionedSchema {
  Schema9({required super.database}) : super(version: 9);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 deviceConfigurationTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 globalConfigurationTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape17 extends i0.VersionedTable {
  Shape17({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get name =>
      columnsByName['name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pis =>
      columnsByName['pis']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cpfNumber =>
      columnsByName['cpf_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get mail =>
      columnsByName['mail']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyId =>
      columnsByName['company_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nfcCode =>
      columnsByName['nfc_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeType =>
      columnsByName['employee_type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get registrationNumber =>
      columnsByName['registration_number']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get arpId =>
      columnsByName['arp_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get enable =>
      columnsByName['enable']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get faceRegistered =>
      columnsByName['face_registered']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeCode =>
      columnsByName['employee_code']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_79(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_code', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape18 extends i0.VersionedTable {
  Shape18({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get gps =>
      columnsByName['gps']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get online =>
      columnsByName['online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get timeout =>
      columnsByName['timeout']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get operationMode =>
      columnsByName['operation_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get nfcMode =>
      columnsByName['nfc_mode']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowChangeTime =>
      columnsByName['allow_change_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get timezone =>
      columnsByName['timezone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceAuthModeSingleMode =>
      columnsByName['device_auth_mode_single_mode']!
          as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceAuthModeMultiMode =>
      columnsByName['device_auth_mode_multi_mode']!
          as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceAuthModeDriverMode =>
      columnsByName['device_auth_mode_driver_mode']!
          as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get allowDrivingTime =>
      columnsByName['allow_driving_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get overnight =>
      columnsByName['overnight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get controlOvernight =>
      columnsByName['control_overnight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowGpoOnApp =>
      columnsByName['allow_gpo_on_app']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get exportNotChecked =>
      columnsByName['export_not_checked']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get insightOutOfBound =>
      columnsByName['insight_out_of_bound']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get takePhotoSingle =>
      columnsByName['take_photo_single']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoMulti =>
      columnsByName['take_photo_multi']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoDriver =>
      columnsByName['take_photo_driver']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoQrcode =>
      columnsByName['take_photo_qrcode']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get openExternalBrowser =>
      columnsByName['open_external_browser']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get clockingEventUses =>
      columnsByName['clocking_event_uses']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get allowUse =>
      columnsByName['allow_use']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get externalControlTimezone =>
      columnsByName['external_control_timezone']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faceRecognition =>
      columnsByName['face_recognition']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_80(String aliasedName) =>
    i1.GeneratedColumn<bool>('gps', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints:
            i1.GeneratedColumn.constraintIsAlways('CHECK ("gps" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_81(String aliasedName) =>
    i1.GeneratedColumn<bool>('online', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("online" IN (0, 1))'));
i1.GeneratedColumn<String> _column_82(String aliasedName) =>
    i1.GeneratedColumn<String>('timeout', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_83(String aliasedName) =>
    i1.GeneratedColumn<String>('operation_mode', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_84(String aliasedName) =>
    i1.GeneratedColumn<bool>('nfc_mode', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("nfc_mode" IN (0, 1))'));
i1.GeneratedColumn<String> _column_85(String aliasedName) =>
    i1.GeneratedColumn<String>('timezone', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_86(String aliasedName) =>
    i1.GeneratedColumn<String>(
        'device_auth_mode_single_mode', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_87(String aliasedName) =>
    i1.GeneratedColumn<String>('device_auth_mode_multi_mode', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_88(String aliasedName) =>
    i1.GeneratedColumn<String>(
        'device_auth_mode_driver_mode', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_89(String aliasedName) =>
    i1.GeneratedColumn<bool>('allow_driving_time', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("allow_driving_time" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_90(String aliasedName) =>
    i1.GeneratedColumn<bool>('overnight', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("overnight" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_91(String aliasedName) =>
    i1.GeneratedColumn<bool>('control_overnight', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("control_overnight" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_92(String aliasedName) =>
    i1.GeneratedColumn<bool>('allow_gpo_on_app', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("allow_gpo_on_app" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_93(String aliasedName) =>
    i1.GeneratedColumn<bool>('export_not_checked', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("export_not_checked" IN (0, 1))'));
i1.GeneratedColumn<String> _column_94(String aliasedName) =>
    i1.GeneratedColumn<String>('insight_out_of_bound', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_95(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo_single', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo_single" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_96(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo_multi', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo_multi" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_97(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo_driver', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo_driver" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_98(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo_qrcode', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo_qrcode" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_99(String aliasedName) =>
    i1.GeneratedColumn<bool>('open_external_browser', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("open_external_browser" IN (0, 1))'));
i1.GeneratedColumn<String> _column_100(String aliasedName) =>
    i1.GeneratedColumn<String>('clocking_event_uses', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_101(String aliasedName) =>
    i1.GeneratedColumn<bool>('allow_use', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("allow_use" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_102(String aliasedName) =>
    i1.GeneratedColumn<bool>('external_control_timezone', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("external_control_timezone" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_103(String aliasedName) =>
    i1.GeneratedColumn<bool>('face_recognition', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("face_recognition" IN (0, 1))'),
        defaultValue: const Constant(false));

final class Schema10 extends i0.VersionedSchema {
  Schema10({required super.database}) : super(version: 10);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape15 deviceConfigurationTable = Shape15(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 globalConfigurationTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

final class Schema11 extends i0.VersionedSchema {
  Schema11({required super.database}) : super(version: 11);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 globalConfigurationTable = Shape18(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape19 extends i0.VersionedTable {
  Shape19({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get enableNfc =>
      columnsByName['enable_nfc']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get enableQrCode =>
      columnsByName['enable_qr_code']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get enableFacial =>
      columnsByName['enable_facial']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get lastUpdate =>
      columnsByName['last_update']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get takePhotoMulti =>
      columnsByName['take_photo_multi']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get lastSync =>
      columnsByName['last_sync']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get enableUserPassword =>
      columnsByName['enable_user_password']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowChangeTime =>
      columnsByName['allow_change_time']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_104(String aliasedName) =>
    i1.GeneratedColumn<bool>('enable_user_password', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enable_user_password" IN (0, 1))'));

final class Schema12 extends i0.VersionedSchema {
  Schema12({required super.database}) : super(version: 12);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape20 extends i0.VersionedTable {
  Shape20({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get gps =>
      columnsByName['gps']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get online =>
      columnsByName['online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get timeout =>
      columnsByName['timeout']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get operationMode =>
      columnsByName['operation_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get nfcMode =>
      columnsByName['nfc_mode']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowChangeTime =>
      columnsByName['allow_change_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get timezone =>
      columnsByName['timezone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceAuthModeSingleMode =>
      columnsByName['device_auth_mode_single_mode']!
          as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceAuthModeMultiMode =>
      columnsByName['device_auth_mode_multi_mode']!
          as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceAuthModeDriverMode =>
      columnsByName['device_auth_mode_driver_mode']!
          as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get allowDrivingTime =>
      columnsByName['allow_driving_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get overnight =>
      columnsByName['overnight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get controlOvernight =>
      columnsByName['control_overnight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowGpoOnApp =>
      columnsByName['allow_gpo_on_app']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get exportNotChecked =>
      columnsByName['export_not_checked']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get insightOutOfBound =>
      columnsByName['insight_out_of_bound']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get takePhotoSingle =>
      columnsByName['take_photo_single']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoMulti =>
      columnsByName['take_photo_multi']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoDriver =>
      columnsByName['take_photo_driver']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoQrcode =>
      columnsByName['take_photo_qrcode']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoNfc =>
      columnsByName['take_photo_nfc']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get openExternalBrowser =>
      columnsByName['open_external_browser']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get clockingEventUses =>
      columnsByName['clocking_event_uses']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get allowUse =>
      columnsByName['allow_use']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get externalControlTimezone =>
      columnsByName['external_control_timezone']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faceRecognition =>
      columnsByName['face_recognition']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_105(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo_nfc', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo_nfc" IN (0, 1))'));

class Shape21 extends i0.VersionedTable {
  Shape21({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get mail =>
      columnsByName['mail']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get platformUserName =>
      columnsByName['platform_user_name']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_106(String aliasedName) =>
    i1.GeneratedColumn<String>('platform_user_name', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape22 extends i0.VersionedTable {
  Shape22({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get managerId =>
      columnsByName['manager_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_107(String aliasedName) =>
    i1.GeneratedColumn<String>('manager_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES manager_table (id)'));

class Shape23 extends i0.VersionedTable {
  Shape23({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get platforUsersId =>
      columnsByName['platfor_users_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_108(String aliasedName) =>
    i1.GeneratedColumn<String>('platfor_users_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES platform_users_table (id)'));

class Shape24 extends i0.VersionedTable {
  Shape24({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get managerId =>
      columnsByName['manager_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get platforUsersId =>
      columnsByName['platfor_users_id']! as i1.GeneratedColumn<String>;
}

final class Schema13 extends i0.VersionedSchema {
  Schema13({required super.database}) : super(version: 13);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape25 logsTable = Shape25(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(date_and_time)',
        ],
        columns: [
          _column_109,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape25 extends i0.VersionedTable {
  Shape25({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get dateAndTime =>
      columnsByName['date_and_time']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceId =>
      columnsByName['device_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get userPlatform =>
      columnsByName['user_platform']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeExternalId =>
      columnsByName['employee_external_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get log =>
      columnsByName['log']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_109(String aliasedName) =>
    i1.GeneratedColumn<String>('date_and_time', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_110(String aliasedName) =>
    i1.GeneratedColumn<String>('device_id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_111(String aliasedName) =>
    i1.GeneratedColumn<String>('user_platform', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_112(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_id', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_113(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_external_id', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_114(String aliasedName) =>
    i1.GeneratedColumn<String>('log', aliasedName, false,
        type: i1.DriftSqlType.string);

final class Schema14 extends i0.VersionedSchema {
  Schema14({required super.database}) : super(version: 14);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape25 logsTable = Shape25(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(date_and_time)',
        ],
        columns: [
          _column_109,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape26 extends i0.VersionedTable {
  Shape26({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get code =>
      columnsByName['code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get clockingEventUseType =>
      columnsByName['clocking_event_use_type']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_115(String aliasedName) =>
    i1.GeneratedColumn<String>('description', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_116(String aliasedName) =>
    i1.GeneratedColumn<String>('code', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_117(String aliasedName) =>
    i1.GeneratedColumn<String>('clocking_event_use_type', aliasedName, false,
        type: i1.DriftSqlType.string);

final class Schema15 extends i0.VersionedSchema {
  Schema15({required super.database}) : super(version: 15);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
    reminderTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape25 logsTable = Shape25(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(date_and_time)',
        ],
        columns: [
          _column_109,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape27 reminderTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'reminder_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, reminder)',
        ],
        columns: [
          _column_16,
          _column_118,
          _column_119,
          _column_120,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape27 extends i0.VersionedTable {
  Shape27({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get period =>
      columnsByName['period']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<bool> get enabled =>
      columnsByName['enabled']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get reminder =>
      columnsByName['reminder']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<DateTime> _column_118(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('period', aliasedName, false,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<bool> _column_119(String aliasedName) =>
    i1.GeneratedColumn<bool>('enabled', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enabled" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_120(String aliasedName) =>
    i1.GeneratedColumn<String>('reminder', aliasedName, false,
        type: i1.DriftSqlType.string);

final class Schema16 extends i0.VersionedSchema {
  Schema16({required super.database}) : super(version: 16);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
    reminderTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape14 configurationTable = Shape14(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 clockingEventTable = Shape3(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape28 logsTable = Shape28(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_121,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape27 reminderTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'reminder_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, reminder)',
        ],
        columns: [
          _column_16,
          _column_118,
          _column_119,
          _column_120,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape28 extends i0.VersionedTable {
  Shape28({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get deviceId =>
      columnsByName['device_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get userPlatform =>
      columnsByName['user_platform']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeExternalId =>
      columnsByName['employee_external_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get log =>
      columnsByName['log']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_121(String aliasedName) =>
    i1.GeneratedColumn<String>('created_at', aliasedName, true,
        type: i1.DriftSqlType.string);

final class Schema17 extends i0.VersionedSchema {
  Schema17({required super.database}) : super(version: 17);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    overnightTable,
    journeyTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
    reminderTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape29 configurationTable = Shape29(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
          _column_90,
          _column_91,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape30 overnightTable = Shape30(
      source: i0.VersionedTable(
        entityName: 'overnight_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id, employee)',
        ],
        columns: [
          _column_0,
          _column_122,
          _column_123,
          _column_124,
          _column_48,
          _column_125,
          _column_126,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape31 journeyTable = Shape31(
      source: i0.VersionedTable(
        entityName: 'journey_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_127,
          _column_128,
          _column_129,
          _column_130,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape32 clockingEventTable = Shape32(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
          _column_131,
          _column_132,
          _column_133,
          _column_134,
          _column_135,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape28 logsTable = Shape28(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_121,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape27 reminderTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'reminder_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, reminder)',
        ],
        columns: [
          _column_16,
          _column_118,
          _column_119,
          _column_120,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape29 extends i0.VersionedTable {
  Shape29({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get onlyOnline =>
      columnsByName['only_online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get operationMode =>
      columnsByName['operation_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timezone =>
      columnsByName['timezone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get takePhoto =>
      columnsByName['take_photo']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowChangeTime =>
      columnsByName['allow_change_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get faceRecognition =>
      columnsByName['face_recognition']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get overnight =>
      columnsByName['overnight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get controlOvernight =>
      columnsByName['control_overnight']! as i1.GeneratedColumn<bool>;
}

class Shape30 extends i0.VersionedTable {
  Shape30({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get date =>
      columnsByName['date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get geolocation =>
      columnsByName['geolocation']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get locationStatus =>
      columnsByName['location_status']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get type =>
      columnsByName['type']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get synchronized =>
      columnsByName['synchronized']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get employee =>
      columnsByName['employee']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<DateTime> _column_122(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date', aliasedName, false,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<String> _column_123(String aliasedName) =>
    i1.GeneratedColumn<String>('geolocation', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_124(String aliasedName) =>
    i1.GeneratedColumn<String>('location_status', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_125(String aliasedName) =>
    i1.GeneratedColumn<bool>('synchronized', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("synchronized" IN (0, 1))'));
i1.GeneratedColumn<String> _column_126(String aliasedName) =>
    i1.GeneratedColumn<String>('employee', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES employee_table (id)'));

class Shape31 extends i0.VersionedTable {
  Shape31({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get journeyNumber =>
      columnsByName['journey_number']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get overnightId =>
      columnsByName['overnight_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get startDate =>
      columnsByName['start_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get endDate =>
      columnsByName['end_date']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<int> _column_127(String aliasedName) =>
    i1.GeneratedColumn<int>('journey_number', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_128(String aliasedName) =>
    i1.GeneratedColumn<String>('overnight_id', aliasedName, true,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES overnight_table (id)'));
i1.GeneratedColumn<DateTime> _column_129(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('start_date', aliasedName, false,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_130(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('end_date', aliasedName, true,
        type: i1.DriftSqlType.dateTime);

class Shape32 extends i0.VersionedTable {
  Shape32({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get clockingEventId =>
      columnsByName['clocking_event_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get dateTimeEvent =>
      columnsByName['date_time_event']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get dateEvent =>
      columnsByName['date_event']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeEvent =>
      columnsByName['time_event']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyIdentifier =>
      columnsByName['company_identifier']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pis =>
      columnsByName['pis']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cpf =>
      columnsByName['cpf']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get platform =>
      columnsByName['platform']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get identifierDevice =>
      columnsByName['identifier_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nameDevice =>
      columnsByName['name_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get developerModeDevice =>
      columnsByName['developer_mode_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get gpsOperationModeDevice =>
      columnsByName['gps_operation_mode_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get dateTimeAutomaticDevice =>
      columnsByName['date_time_automatic_device']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get timeZoneAutomaticDevice =>
      columnsByName['time_zone_automatic_device']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<double> get latitudeLocation =>
      columnsByName['latitude_location']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get longitudeLocation =>
      columnsByName['longitude_location']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<bool> get geolocationIsMock =>
      columnsByName['geolocation_is_mock']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get dateAndTimeLocation =>
      columnsByName['date_and_time_location']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fenceState =>
      columnsByName['fence_state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get use =>
      columnsByName['use']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get mode =>
      columnsByName['mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get online =>
      columnsByName['online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get origin =>
      columnsByName['origin']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get signature =>
      columnsByName['signature']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get signatureVersion =>
      columnsByName['signature_version']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get clientOriginInfo =>
      columnsByName['client_origin_info']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appointmentImage =>
      columnsByName['appointment_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get photoNotCaptured =>
      columnsByName['photo_not_captured']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get locationStatus =>
      columnsByName['location_status']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isSynchronized =>
      columnsByName['is_synchronized']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get journeyId =>
      columnsByName['journey_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isMealBreak =>
      columnsByName['is_meal_break']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get journeyEventName =>
      columnsByName['journey_event_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeName =>
      columnsByName['employee_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyName =>
      columnsByName['company_name']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_131(String aliasedName) =>
    i1.GeneratedColumn<String>('journey_id', aliasedName, true,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'REFERENCES journey_table (id)'));
i1.GeneratedColumn<bool> _column_132(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_meal_break', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_meal_break" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<String> _column_133(String aliasedName) =>
    i1.GeneratedColumn<String>('journey_event_name', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_134(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_name', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const Constant('defaultValue'));
i1.GeneratedColumn<String> _column_135(String aliasedName) =>
    i1.GeneratedColumn<String>('company_name', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const Constant('defaultValue'));

final class Schema18 extends i0.VersionedSchema {
  Schema18({required super.database}) : super(version: 18);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    overnightTable,
    journeyTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
    reminderTable,
    privacyPolicyTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape29 configurationTable = Shape29(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
          _column_90,
          _column_91,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape30 overnightTable = Shape30(
      source: i0.VersionedTable(
        entityName: 'overnight_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id, employee)',
        ],
        columns: [
          _column_0,
          _column_122,
          _column_123,
          _column_124,
          _column_48,
          _column_125,
          _column_126,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape31 journeyTable = Shape31(
      source: i0.VersionedTable(
        entityName: 'journey_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_127,
          _column_128,
          _column_129,
          _column_130,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape33 clockingEventTable = Shape33(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
          _column_131,
          _column_132,
          _column_133,
          _column_134,
          _column_135,
          _column_136,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape28 logsTable = Shape28(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_121,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape27 reminderTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'reminder_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, reminder)',
        ],
        columns: [
          _column_16,
          _column_118,
          _column_119,
          _column_120,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape34 privacyPolicyTable = Shape34(
      source: i0.VersionedTable(
        entityName: 'privacy_policy_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(version)',
        ],
        columns: [
          _column_137,
          _column_138,
          _column_139,
          _column_140,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape33 extends i0.VersionedTable {
  Shape33({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get clockingEventId =>
      columnsByName['clocking_event_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get dateTimeEvent =>
      columnsByName['date_time_event']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get dateEvent =>
      columnsByName['date_event']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeEvent =>
      columnsByName['time_event']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timeZone =>
      columnsByName['time_zone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyIdentifier =>
      columnsByName['company_identifier']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pis =>
      columnsByName['pis']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get cpf =>
      columnsByName['cpf']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get platform =>
      columnsByName['platform']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get identifierDevice =>
      columnsByName['identifier_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get nameDevice =>
      columnsByName['name_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get developerModeDevice =>
      columnsByName['developer_mode_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get gpsOperationModeDevice =>
      columnsByName['gps_operation_mode_device']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get dateTimeAutomaticDevice =>
      columnsByName['date_time_automatic_device']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get timeZoneAutomaticDevice =>
      columnsByName['time_zone_automatic_device']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<double> get latitudeLocation =>
      columnsByName['latitude_location']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<double> get longitudeLocation =>
      columnsByName['longitude_location']! as i1.GeneratedColumn<double>;
  i1.GeneratedColumn<bool> get geolocationIsMock =>
      columnsByName['geolocation_is_mock']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get dateAndTimeLocation =>
      columnsByName['date_and_time_location']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fenceState =>
      columnsByName['fence_state']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get use =>
      columnsByName['use']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get mode =>
      columnsByName['mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get online =>
      columnsByName['online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get origin =>
      columnsByName['origin']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get signature =>
      columnsByName['signature']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get signatureVersion =>
      columnsByName['signature_version']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get clientOriginInfo =>
      columnsByName['client_origin_info']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appointmentImage =>
      columnsByName['appointment_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get photoNotCaptured =>
      columnsByName['photo_not_captured']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get locationStatus =>
      columnsByName['location_status']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isSynchronized =>
      columnsByName['is_synchronized']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get journeyId =>
      columnsByName['journey_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isMealBreak =>
      columnsByName['is_meal_break']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get journeyEventName =>
      columnsByName['journey_event_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeName =>
      columnsByName['employee_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get companyName =>
      columnsByName['company_name']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get facialRecognitionStatus =>
      columnsByName['facial_recognition_status']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_136(String aliasedName) =>
    i1.GeneratedColumn<String>('facial_recognition_status', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape34 extends i0.VersionedTable {
  Shape34({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<DateTime> get dateTimeCreated =>
      columnsByName['date_time_created']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get dateTimeEventRead =>
      columnsByName['date_time_event_read']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get version =>
      columnsByName['version']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get urlVersion =>
      columnsByName['url_version']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<DateTime> _column_137(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date_time_created', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_138(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('date_time_event_read', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<int> _column_139(String aliasedName) =>
    i1.GeneratedColumn<int>('version', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_140(String aliasedName) =>
    i1.GeneratedColumn<String>('url_version', aliasedName, false,
        type: i1.DriftSqlType.string);

final class Schema19 extends i0.VersionedSchema {
  Schema19({required super.database}) : super(version: 19);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    overnightTable,
    journeyTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
    reminderTable,
    privacyPolicyTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape29 configurationTable = Shape29(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
          _column_90,
          _column_91,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape30 overnightTable = Shape30(
      source: i0.VersionedTable(
        entityName: 'overnight_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id, employee)',
        ],
        columns: [
          _column_0,
          _column_122,
          _column_123,
          _column_124,
          _column_48,
          _column_125,
          _column_126,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape31 journeyTable = Shape31(
      source: i0.VersionedTable(
        entityName: 'journey_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_127,
          _column_128,
          _column_129,
          _column_130,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape33 clockingEventTable = Shape33(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
          _column_131,
          _column_132,
          _column_133,
          _column_134,
          _column_135,
          _column_136,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape28 logsTable = Shape28(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_121,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape27 reminderTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'reminder_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, reminder)',
        ],
        columns: [
          _column_16,
          _column_118,
          _column_119,
          _column_120,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape34 privacyPolicyTable = Shape34(
      source: i0.VersionedTable(
        entityName: 'privacy_policy_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(version)',
        ],
        columns: [
          _column_137,
          _column_138,
          _column_139,
          _column_140,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

final class Schema20 extends i0.VersionedSchema {
  Schema20({required super.database}) : super(version: 20);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    overnightTable,
    journeyTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
    reminderTable,
    privacyPolicyTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape29 configurationTable = Shape29(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_12,
          _column_13,
          _column_14,
          _column_15,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
          _column_90,
          _column_91,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape30 overnightTable = Shape30(
      source: i0.VersionedTable(
        entityName: 'overnight_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id, employee)',
        ],
        columns: [
          _column_0,
          _column_122,
          _column_123,
          _column_124,
          _column_48,
          _column_125,
          _column_126,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape31 journeyTable = Shape31(
      source: i0.VersionedTable(
        entityName: 'journey_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_127,
          _column_128,
          _column_129,
          _column_130,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape33 clockingEventTable = Shape33(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
          _column_131,
          _column_132,
          _column_133,
          _column_134,
          _column_135,
          _column_136,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_102,
          _column_103,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape28 logsTable = Shape28(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_121,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape27 reminderTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'reminder_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, reminder)',
        ],
        columns: [
          _column_16,
          _column_118,
          _column_119,
          _column_120,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape34 privacyPolicyTable = Shape34(
      source: i0.VersionedTable(
        entityName: 'privacy_policy_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(version)',
        ],
        columns: [
          _column_137,
          _column_138,
          _column_139,
          _column_140,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

final class Schema21 extends i0.VersionedSchema {
  Schema21({required super.database}) : super(version: 21);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    companyTable,
    employeeTable,
    configurationTable,
    overnightTable,
    journeyTable,
    clockingEventTable,
    fenceTable,
    perimeterTable,
    employeeFenceTable,
    fencePerimeterTable,
    deviceTable,
    activationTable,
    applicationTable,
    deviceConfigurationTable,
    globalConfigurationTable,
    managerTable,
    platformUsersTable,
    employeeManagersTable,
    employeePlatformUsersTable,
    managersPlatformUsersTable,
    logsTable,
    clockingEventUseTable,
    reminderTable,
    privacyPolicyTable,
  ];
  late final Shape10 companyTable = Shape10(
      source: i0.VersionedTable(
        entityName: 'company_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_11,
          _column_62,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 employeeTable = Shape17(
      source: i0.VersionedTable(
        entityName: 'employee_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_9,
          _column_10,
          _column_11,
          _column_64,
          _column_78,
          _column_79,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape35 configurationTable = Shape35(
      source: i0.VersionedTable(
        entityName: 'configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_141,
          _column_13,
          _column_14,
          _column_142,
          _column_65,
          _column_66,
          _column_16,
          _column_71,
          _column_90,
          _column_91,
          _column_80,
          _column_143,
          _column_89,
          _column_92,
          _column_93,
          _column_94,
          _column_99,
          _column_101,
          _column_144,
          _column_84,
          _column_105,
          _column_95,
          _column_97,
          _column_98,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape30 overnightTable = Shape30(
      source: i0.VersionedTable(
        entityName: 'overnight_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id, employee)',
        ],
        columns: [
          _column_0,
          _column_122,
          _column_123,
          _column_124,
          _column_48,
          _column_125,
          _column_126,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape31 journeyTable = Shape31(
      source: i0.VersionedTable(
        entityName: 'journey_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_127,
          _column_128,
          _column_129,
          _column_130,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape33 clockingEventTable = Shape33(
      source: i0.VersionedTable(
        entityName: 'clocking_event_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(clocking_event_id)',
        ],
        columns: [
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_3,
          _column_21,
          _column_4,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_28,
          _column_29,
          _column_30,
          _column_31,
          _column_32,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_145,
          _column_40,
          _column_41,
          _column_42,
          _column_43,
          _column_44,
          _column_45,
          _column_46,
          _column_47,
          _column_131,
          _column_146,
          _column_133,
          _column_147,
          _column_148,
          _column_136,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 fenceTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 perimeterTable = Shape5(
      source: i0.VersionedTable(
        entityName: 'perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_48,
          _column_49,
          _column_50,
          _column_51,
          _column_52,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 employeeFenceTable = Shape6(
      source: i0.VersionedTable(
        entityName: 'employee_fence_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, fence_id)',
        ],
        columns: [
          _column_16,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 fencePerimeterTable = Shape7(
      source: i0.VersionedTable(
        entityName: 'fence_perimeter_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(perimeter_id, fence_id)',
        ],
        columns: [
          _column_54,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 deviceTable = Shape8(
      source: i0.VersionedTable(
        entityName: 'device_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_55,
          _column_56,
          _column_57,
          _column_58,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 activationTable = Shape9(
      source: i0.VersionedTable(
        entityName: 'activation_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id)',
        ],
        columns: [
          _column_59,
          _column_60,
          _column_61,
          _column_16,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape13 applicationTable = Shape13(
      source: i0.VersionedTable(
        entityName: 'application_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(tenant_name)',
        ],
        columns: [
          _column_67,
          _column_68,
          _column_69,
          _column_70,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 deviceConfigurationTable = Shape19(
      source: i0.VersionedTable(
        entityName: 'device_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_72,
          _column_73,
          _column_74,
          _column_3,
          _column_75,
          _column_76,
          _column_77,
          _column_104,
          _column_65,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 globalConfigurationTable = Shape20(
      source: i0.VersionedTable(
        entityName: 'global_configuration_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_80,
          _column_81,
          _column_82,
          _column_83,
          _column_84,
          _column_65,
          _column_85,
          _column_86,
          _column_87,
          _column_88,
          _column_89,
          _column_90,
          _column_91,
          _column_92,
          _column_93,
          _column_94,
          _column_95,
          _column_96,
          _column_97,
          _column_98,
          _column_105,
          _column_99,
          _column_100,
          _column_101,
          _column_149,
          _column_150,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 managerTable = Shape21(
      source: i0.VersionedTable(
        entityName: 'manager_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_6,
          _column_106,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 platformUsersTable = Shape4(
      source: i0.VersionedTable(
        entityName: 'platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_2,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 employeeManagersTable = Shape22(
      source: i0.VersionedTable(
        entityName: 'employee_managers_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, manager_id)',
        ],
        columns: [
          _column_16,
          _column_107,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape23 employeePlatformUsersTable = Shape23(
      source: i0.VersionedTable(
        entityName: 'employee_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, platfor_users_id)',
        ],
        columns: [
          _column_16,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 managersPlatformUsersTable = Shape24(
      source: i0.VersionedTable(
        entityName: 'managers_platform_users_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(manager_id, platfor_users_id)',
        ],
        columns: [
          _column_107,
          _column_108,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape28 logsTable = Shape28(
      source: i0.VersionedTable(
        entityName: 'logs_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(id)',
        ],
        columns: [
          _column_0,
          _column_121,
          _column_110,
          _column_111,
          _column_112,
          _column_113,
          _column_114,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape26 clockingEventUseTable = Shape26(
      source: i0.VersionedTable(
        entityName: 'clocking_event_use_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, clocking_event_use_type)',
        ],
        columns: [
          _column_16,
          _column_115,
          _column_116,
          _column_117,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape27 reminderTable = Shape27(
      source: i0.VersionedTable(
        entityName: 'reminder_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(employee_id, reminder)',
        ],
        columns: [
          _column_16,
          _column_118,
          _column_151,
          _column_120,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape34 privacyPolicyTable = Shape34(
      source: i0.VersionedTable(
        entityName: 'privacy_policy_table',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(version)',
        ],
        columns: [
          _column_137,
          _column_138,
          _column_139,
          _column_140,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape35 extends i0.VersionedTable {
  Shape35({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<bool> get onlyOnline =>
      columnsByName['only_online']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get operationMode =>
      columnsByName['operation_mode']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get timezone =>
      columnsByName['timezone']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get takePhoto =>
      columnsByName['take_photo']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowChangeTime =>
      columnsByName['allow_change_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get username =>
      columnsByName['username']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get employeeId =>
      columnsByName['employee_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get faceRecognition =>
      columnsByName['face_recognition']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get overnight =>
      columnsByName['overnight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get controlOvernight =>
      columnsByName['control_overnight']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get gps =>
      columnsByName['gps']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get deviceAuthorizationType =>
      columnsByName['device_authorization_type']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowDrivingTime =>
      columnsByName['allow_driving_time']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowGpoOnApp =>
      columnsByName['allow_gpo_on_app']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get exportNotChecked =>
      columnsByName['export_not_checked']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get insightOutOfBound =>
      columnsByName['insight_out_of_bound']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get openExternalBrowser =>
      columnsByName['open_external_browser']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get allowUse =>
      columnsByName['allow_use']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get externalControlTimezone =>
      columnsByName['external_control_timezone']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get nfcMode =>
      columnsByName['nfc_mode']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoNfc =>
      columnsByName['take_photo_nfc']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoSingle =>
      columnsByName['take_photo_single']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoDriver =>
      columnsByName['take_photo_driver']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get takePhotoQrcode =>
      columnsByName['take_photo_qrcode']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_141(String aliasedName) =>
    i1.GeneratedColumn<bool>('only_online', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("only_online" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_142(String aliasedName) =>
    i1.GeneratedColumn<bool>('take_photo', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("take_photo" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_143(String aliasedName) =>
    i1.GeneratedColumn<bool>('device_authorization_type', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("device_authorization_type" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_144(String aliasedName) =>
    i1.GeneratedColumn<bool>('external_control_timezone', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("external_control_timezone" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_145(String aliasedName) =>
    i1.GeneratedColumn<bool>('online', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints:
            i1.GeneratedColumn.constraintIsAlways('CHECK ("online" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_146(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_meal_break', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_meal_break" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<String> _column_147(String aliasedName) =>
    i1.GeneratedColumn<String>('employee_name', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const CustomExpression('\'defaultValue\''));
i1.GeneratedColumn<String> _column_148(String aliasedName) =>
    i1.GeneratedColumn<String>('company_name', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultValue: const CustomExpression('\'defaultValue\''));
i1.GeneratedColumn<bool> _column_149(String aliasedName) =>
    i1.GeneratedColumn<bool>('external_control_timezone', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("external_control_timezone" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_150(String aliasedName) =>
    i1.GeneratedColumn<bool>('face_recognition', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("face_recognition" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i1.GeneratedColumn<bool> _column_151(String aliasedName) =>
    i1.GeneratedColumn<bool>('enabled', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("enabled" IN (0, 1))'),
        defaultValue: const CustomExpression('0'));
i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, Schema9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, Schema10 schema) from9To10,
  required Future<void> Function(i1.Migrator m, Schema11 schema) from10To11,
  required Future<void> Function(i1.Migrator m, Schema12 schema) from11To12,
  required Future<void> Function(i1.Migrator m, Schema13 schema) from12To13,
  required Future<void> Function(i1.Migrator m, Schema14 schema) from13To14,
  required Future<void> Function(i1.Migrator m, Schema15 schema) from14To15,
  required Future<void> Function(i1.Migrator m, Schema16 schema) from15To16,
  required Future<void> Function(i1.Migrator m, Schema17 schema) from16To17,
  required Future<void> Function(i1.Migrator m, Schema18 schema) from17To18,
  required Future<void> Function(i1.Migrator m, Schema19 schema) from18To19,
  required Future<void> Function(i1.Migrator m, Schema20 schema) from19To20,
  required Future<void> Function(i1.Migrator m, Schema21 schema) from20To21,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 1:
        final schema = Schema2(database: database);
        final migrator = i1.Migrator(database, schema);
        await from1To2(migrator, schema);
        return 2;
      case 2:
        final schema = Schema3(database: database);
        final migrator = i1.Migrator(database, schema);
        await from2To3(migrator, schema);
        return 3;
      case 3:
        final schema = Schema4(database: database);
        final migrator = i1.Migrator(database, schema);
        await from3To4(migrator, schema);
        return 4;
      case 4:
        final schema = Schema5(database: database);
        final migrator = i1.Migrator(database, schema);
        await from4To5(migrator, schema);
        return 5;
      case 5:
        final schema = Schema6(database: database);
        final migrator = i1.Migrator(database, schema);
        await from5To6(migrator, schema);
        return 6;
      case 6:
        final schema = Schema7(database: database);
        final migrator = i1.Migrator(database, schema);
        await from6To7(migrator, schema);
        return 7;
      case 7:
        final schema = Schema8(database: database);
        final migrator = i1.Migrator(database, schema);
        await from7To8(migrator, schema);
        return 8;
      case 8:
        final schema = Schema9(database: database);
        final migrator = i1.Migrator(database, schema);
        await from8To9(migrator, schema);
        return 9;
      case 9:
        final schema = Schema10(database: database);
        final migrator = i1.Migrator(database, schema);
        await from9To10(migrator, schema);
        return 10;
      case 10:
        final schema = Schema11(database: database);
        final migrator = i1.Migrator(database, schema);
        await from10To11(migrator, schema);
        return 11;
      case 11:
        final schema = Schema12(database: database);
        final migrator = i1.Migrator(database, schema);
        await from11To12(migrator, schema);
        return 12;
      case 12:
        final schema = Schema13(database: database);
        final migrator = i1.Migrator(database, schema);
        await from12To13(migrator, schema);
        return 13;
      case 13:
        final schema = Schema14(database: database);
        final migrator = i1.Migrator(database, schema);
        await from13To14(migrator, schema);
        return 14;
      case 14:
        final schema = Schema15(database: database);
        final migrator = i1.Migrator(database, schema);
        await from14To15(migrator, schema);
        return 15;
      case 15:
        final schema = Schema16(database: database);
        final migrator = i1.Migrator(database, schema);
        await from15To16(migrator, schema);
        return 16;
      case 16:
        final schema = Schema17(database: database);
        final migrator = i1.Migrator(database, schema);
        await from16To17(migrator, schema);
        return 17;
      case 17:
        final schema = Schema18(database: database);
        final migrator = i1.Migrator(database, schema);
        await from17To18(migrator, schema);
        return 18;
      case 18:
        final schema = Schema19(database: database);
        final migrator = i1.Migrator(database, schema);
        await from18To19(migrator, schema);
        return 19;
      case 19:
        final schema = Schema20(database: database);
        final migrator = i1.Migrator(database, schema);
        await from19To20(migrator, schema);
        return 20;
      case 20:
        final schema = Schema21(database: database);
        final migrator = i1.Migrator(database, schema);
        await from20To21(migrator, schema);
        return 21;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, Schema2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, Schema3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, Schema4 schema) from3To4,
  required Future<void> Function(i1.Migrator m, Schema5 schema) from4To5,
  required Future<void> Function(i1.Migrator m, Schema6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, Schema7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, Schema8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, Schema9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, Schema10 schema) from9To10,
  required Future<void> Function(i1.Migrator m, Schema11 schema) from10To11,
  required Future<void> Function(i1.Migrator m, Schema12 schema) from11To12,
  required Future<void> Function(i1.Migrator m, Schema13 schema) from12To13,
  required Future<void> Function(i1.Migrator m, Schema14 schema) from13To14,
  required Future<void> Function(i1.Migrator m, Schema15 schema) from14To15,
  required Future<void> Function(i1.Migrator m, Schema16 schema) from15To16,
  required Future<void> Function(i1.Migrator m, Schema17 schema) from16To17,
  required Future<void> Function(i1.Migrator m, Schema18 schema) from17To18,
  required Future<void> Function(i1.Migrator m, Schema19 schema) from18To19,
  required Future<void> Function(i1.Migrator m, Schema20 schema) from19To20,
  required Future<void> Function(i1.Migrator m, Schema21 schema) from20To21,
}) =>
    i0.VersionedSchema.stepByStepHelper(
        step: migrationSteps(
      from1To2: from1To2,
      from2To3: from2To3,
      from3To4: from3To4,
      from4To5: from4To5,
      from5To6: from5To6,
      from6To7: from6To7,
      from7To8: from7To8,
      from8To9: from8To9,
      from9To10: from9To10,
      from10To11: from10To11,
      from11To12: from11To12,
      from12To13: from12To13,
      from13To14: from13To14,
      from14To15: from14To15,
      from15To16: from15To16,
      from16To17: from16To17,
      from17To18: from17To18,
      from18To19: from18To19,
      from19To20: from19To20,
      from20To21: from20To21,
    ));
